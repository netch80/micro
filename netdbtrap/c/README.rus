Командная строка
~~~~~~~~~~~~~~~~

Для данной версии программы единственный допустимый формат командной строки
- имена командных файлов. Файлы интерпретируются в порядке их нахождения в
командной строке.


Командный файл
~~~~~~~~~~~~~~

Командный файл состоит из последовательности строк. Строки могут стандартным
образом (обратная косая черта последним символом предыдущего куска) делиться
на несколько кусочков. После сбора из таких кусочков, проверяется первый
непробельный символ строки, и, если он не является буквой или цифрой -
строка считается комментарием и игнорируется.

В данный момент поддерживается единственный формат команд:

r gethostbyname <Host> <TestType> <адреса>

где "r" означает "report", "gethostbyname" - понятно и так;), <Host> - имя
хоста, по которому дается запрос, <TestType> - условие срабатывания,
<адреса> - адреса в эталонном множестве (с которым идет сравнение).
Виды сравнений приведены ниже.

Если условие срабатывания не выполняется, то ничего не выводится. Программа
выводит сообщения в случае срабатывания условия, а также в случае
невозможности получения данных из netdb. (Ошибки NO_DATA, HOST_NOT_FOUND
считаются ответами, дающими пустое множество. Ошибки TRY_AGAIN, NO_RECOVERY
считаются ошибками и в их случае выводится соответствующее сообщение.)


Математическая основа ;)
~~~~~~~~~~~~~~~~~~~~~~~~

N - найденное множество
E - эталонное множество

N-E+  N+E-  N+E+    Смысл                   Названия - по непустому и пустому
 0     0     0      смысл отсутствует
 0     0     1      пересечение               if_any_common   if_none_common
 0     1     0      N\E                       if_any_extra    if_none_extra
 0     1     1      N                         if_any          if_none
 1     0     0      E\N                       if_any_absent   if_none_absent
 1     0     1      смысл отсутствует
 1     1     0      симметрическая разность   if_differs      if_not_differs
 1     1     1      смысл отсутствует

Итого, получается 10 видов осмысленных запросов (5 осмысленных функций над
двумя множествами при ограничении, что универсальным множеством является их
объединение, умножить на два условия срабатывания - если результирующее
множество пустое или непустое). IMHO, для данной постановки - с двумя
множествами - нельзя придумать какие-либо еще проверки. ;)
